@use "defaults";
@use "helpers" as *;
@use "tabbed";
@use "fonts";
@use "inputs";

body {
  font: {
    family: fonts.$openSans;
    size: 21px;
  };
  display: grid;
  background-color: white;

  --controls-min-width: 200px;
  --preview-content-width: "";
  --preview-height: "";
  grid-template: {
    areas: "header header" "preview controls" "charset controls" "footer footer";
    rows: minmax(90px, auto) var(--preview-height) min-content auto;
    //noinspection CssInvalidFunction
    columns: minmax(min(calc(100% - var(--controls-min-width)), var(--preview-content-width)), 1fr) minmax(var(--controls-min-width), 390px);
  }
}

.header {
  grid-area: header;
}

.title {
  @include flex(column);
  animation: slide 10s linear infinite;
  text-align: center;
  padding-bottom: 10px;
  @include defaults.waves;

  &.offline {
    @include defaults.dashed-waves
  }

  a {
    color: inherit;
    text-decoration: inherit;
  }

  @keyframes slide {
    0% {
      background-position-x: 100px;
    }
    100% {
      background-position-x: 0;
    }
  }

  :nth-child(1) {
    font-size: 52px;
  }

  :nth-child(2) {
    font-size: 21px;
  }
}

.exportInputs {
  display: flex;
  justify-content: space-between;

  > button {
    padding-top: 2px;
    padding-bottom: 2px
  }
}

.preview {
  position: relative;
  overflow: hidden;
  border: 0 solid black {
    right-width: 1px;
    top-width: 1px;
    radius: 7px 7px 0 0;
  }
  @include fillSpace;
  grid-area: preview;

  > div {
    position: absolute;
    overflow: scroll;
    @include fillSpace;
    padding: 7px;
    @include defaults.reticulate;
  }

  canvas {
    margin: 0 auto;
  }
}

.controls {
  @include flex(column);
  grid-area: controls;

  > .section + div {
    padding-bottom: 13px;
  }
}

.mandatoryFont {
  padding-bottom: 10px;

  @include tabbed.container {
    @include tabbed.labels {
      font-size: 20px;
      width: 50%;
      text-align: center;
      border: 1px solid {
        radius: 7px 7px 0 0;
      }

      &:nth-of-type(1) {
        border-width: 1px 1px 1px 0;
      }

      &:nth-of-type(2) {
        border-width: 1px 0 1px 0;
      }
    }

    @include tabbed.tabs {
      @include flex(column);
      align-items: center;
      padding: 7px;

      > label {
        padding-bottom: 5px;
      }

      > input {
        display: block;
        width: 95%;
      }
    }
  }
}

.fallbackFont {
  @extend .mandatoryFont;
  padding-bottom: 0;
}

.gridInputs {
  @include flex(column);
  justify-content: space-between;
  padding: 0 13px;
}

.optionsInputs {
  @include flex(column);
  justify-content: space-between;
  align-items: center;
  padding: 0 13px;

  > :not(.wrappable-input) {
    padding-bottom: 7px;
  }
}

.charset {
  @include flex(column);
  align-items: center;
  padding-bottom: 13px;
  border: 1px solid black {
    width: 0 1px 0 0;
  }
  grid-area: charset;

  > div {
    width: 90%;
  }

  textarea {
    height: 130px;
    min-height: 50px;
    line-height: 160%;
  }
}

.footer {
  font: {
    family: fonts.$consolas;
    size: 13px;
  }
  padding: 0 7px;
  text-align: center;
  border: 0 solid black {
    top-width: 1px;
  }
  grid-area: footer;

  a {
    color: inherit;
  }

  > span {
    text-decoration: underline line-through;
  }
}

.messageBoxContainer {
  position: fixed;
  @include fillSpace;
  background-color: rgba(0, 0, 0, .5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.messageBox {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  max-width: 500px;
  border: 1px solid black {
    radius: 7px;
  }
  background-color: white;
  padding: 10px 10px;
  text-align: center;

  > span {
    display: block;
    padding-bottom: 20px;
  }

  > div {
    display: flex;
    width: 100%;
    min-width: 200px;
    align-items: center;
    justify-content: space-around;
  }

  > button {
    display: block;
  }
}

.gabibbo{
  display: flex;
}